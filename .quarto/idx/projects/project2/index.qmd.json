{"title":"A Replication of Karlan and List (2007)","markdown":{"yaml":{"title":"A Replication of Karlan and List (2007)","author":"Ruoqi Li","date":"today","callout-appearance":"minimal"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\n\nDean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. \n\nEach recipient was randomly assigned to receive one of the following treatments:\n\n- A **standard solicitation letter** (control group)\n- A letter including a **matching donation offer** (treatment group)\n- Variations within the matching group that differed by:\n  - **Match ratio** (1:1, 2:1, or 3:1)\n  - **Maximum match amount** ($25k, $50k, $100k, or unstated)\n  - **Suggested donation level** (e.g., base amount, 1.25x, or 1.5x of prior donation)\n\nThe matching grant was framed as coming from a \"concerned fellow member\" who would match donations received up to a certain amount, providing a perceived **multiplier effect** to the recipient's contribution.\n\nThis design allowed the authors to explore not only the **overall impact of offering a match** on donation rates and amounts, but also to test whether the **size of the match ratio** or the **suggested donation amount** affected donor behavior.\n\nThey published the results of this experiment in the _American Economic Review_ in 2007. The article and supporting data are available from the [AEA website](https://www.aeaweb.org/articles?id=10.1257/aer.97.5.1774) and from Innovations for Poverty Action as part of [Harvard's Dataverse](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/27853&version=4.2).\n\n\nThis project seeks to replicate their results.\n\n\n## Data\n\n### Description\n\n:::: {.callout-note collapse=\"true\"}\n### Variable Definitions\n\n| Variable             | Description                                                         |\n|----------------------|---------------------------------------------------------------------|\n| `treatment`          | Treatment                                                           |\n| `control`            | Control                                                             |\n| `ratio`              | Match ratio                                                         |\n| `ratio2`             | 2:1 match ratio                                                     |\n| `ratio3`             | 3:1 match ratio                                                     |\n| `size`               | Match threshold                                                     |\n| `size25`             | \\$25,000 match threshold                                            |\n| `size50`             | \\$50,000 match threshold                                            |\n| `size100`            | \\$100,000 match threshold                                           |\n| `sizeno`             | Unstated match threshold                                            |\n| `ask`                | Suggested donation amount                                           |\n| `askd1`              | Suggested donation was highest previous contribution                |\n| `askd2`              | Suggested donation was 1.25 x highest previous contribution         |\n| `askd3`              | Suggested donation was 1.50 x highest previous contribution         |\n| `ask1`               | Highest previous contribution (for suggestion)                      |\n| `ask2`               | 1.25 x highest previous contribution (for suggestion)               |\n| `ask3`               | 1.50 x highest previous contribution (for suggestion)               |\n| `amount`             | Dollars given                                                       |\n| `gave`               | Gave anything                                                       |\n| `amountchange`       | Change in amount given                                              |\n| `hpa`                | Highest previous contribution                                       |\n| `ltmedmra`           | Small prior donor: last gift was less than median \\$35              |\n| `freq`               | Number of prior donations                                           |\n| `years`              | Number of years since initial donation                              |\n| `year5`              | At least 5 years since initial donation                             |\n| `mrm2`               | Number of months since last donation                                |\n| `dormant`            | Already donated in 2005                                             |\n| `female`             | Female                                                              |\n| `couple`             | Couple                                                              |\n| `state50one`         | State tag: 1 for one observation of each of 50 states; 0 otherwise  |\n| `nonlit`             | Nonlitigation                                                       |\n| `cases`              | Court cases from state in 2004-5 in which organization was involved |\n| `statecnt`           | Percent of sample from state                                        |\n| `stateresponse`      | Proportion of sample from the state who gave                        |\n| `stateresponset`     | Proportion of treated sample from the state who gave                |\n| `stateresponsec`     | Proportion of control sample from the state who gave                |\n| `stateresponsetminc` | stateresponset - stateresponsec                                     |\n| `perbush`            | State vote share for Bush                                           |\n| `close25`            | State vote share for Bush between 47.5% and 52.5%                   |\n| `red0`               | Red state                                                           |\n| `blue0`              | Blue state                                                          |\n| `redcty`             | Red county                                                          |\n| `bluecty`            | Blue county                                                         |\n| `pwhite`             | Proportion white within zip code                                    |\n| `pblack`             | Proportion black within zip code                                    |\n| `page18_39`          | Proportion age 18-39 within zip code                                |\n| `ave_hh_sz`          | Average household size within zip code                              |\n| `median_hhincome`    | Median household income within zip code                             |\n| `powner`             | Proportion house owner within zip code                              |\n| `psch_atlstba`       | Proportion who finished college within zip code                     |\n| `pop_propurban`      | Proportion of population urban within zip code                      |\n\n::::\n\n```{python}\n#| echo: false\n#| message: false\n#| warning: false\n\nimport pandas as pd\n\n# Load dataset\ndf = pd.read_stata(\"karlan_list_2007.dta\")\n\n# Optionally preview first few rows (or not show anything)\ndf.head()\n```\n\n\n\n### Balance Test \n\nAs an ad hoc test of the randomization mechanism, I provide a series of tests that compare aspects of the treatment and control groups to assess whether they are statistically significantly different from one another.\n\n\n#### **1. `mrm2` (Months Since Last Donation)**\n\nWe first test whether the treatment and control groups differ significantly in the number of months since their last donation (`mrm2`). This helps verify whether the randomization process created balanced groups.\n\n```{python}\n#| echo: false\nfrom scipy import stats\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\ndf_clean = df[['treatment', 'mrm2', 'years', 'freq', 'female']].dropna()\n\ntreat_group = df_clean[df_clean['treatment'] == 1]['mrm2']\ncontrol_group = df_clean[df_clean['treatment'] == 0]['mrm2']\nt_stat, p_val = stats.ttest_ind(treat_group, control_group)\nt_stat, p_val\n```\n> The t-test returns a **t-statistic of 0.076** and a **p-value of 0.939**, indicating no statistically significant difference in the `mrm2` variable between the two groups.\n\nWe also run a regression of `mrm2 ~ treatment` to confirm the result:\n\n```{python}\n#| echo: true\nreg_model = smf.ols('mrm2 ~ treatment', data=df_clean).fit()\nreg_model.params.to_frame(\"coef\").join(reg_model.pvalues.to_frame(\"p-value\"))\n\n```\n> The estimated coefficient on `treatment` is **0.0088** with a **p-value of 0.939**, again showing no meaningful difference.\n\n\n\n\n#### Summary statistics:\n\n```{python}\n#| echo: false\ndf_clean.groupby('treatment')['mrm2'].agg(['mean', 'std', 'count'])\n```\nThe table above shows the average number of months since the last donation (`mrm2`) for each group:\n\n- Control group (treatment = 0): **12.98 months**\n- Treatment group (treatment = 1): **12.99 months**\n\nThe means are nearly identical, differing by only **0.0088 months**.  \nThis minimal difference provides strong visual evidence that the groups are balanced on this pre-treatment variable.\n\n#### **Summary Interpretation:**\n\n- **T-test result**: t = 0.076, p = 0.939 â†’ No significant difference\n- **Regression**: treatment coefficient is 0.0088, also not significant\n- **Conclusion**: There is no statistical evidence of a difference in the time since last donation between the treatment and control groups.\n\n\n#### **2. `years` (Years Since First Donation)**\n\nWe now test whether the treatment and control groups differ significantly in the number of years since the individual first donated (`years`). This variable serves as a proxy for donor loyalty and tenure.\n\n```{python}\n#| echo: false\n#| output: true\n\n# T-test for years\ntreat_group = df_clean[df_clean['treatment'] == 1]['years']\ncontrol_group = df_clean[df_clean['treatment'] == 0]['years']\nt_stat, p_val = stats.ttest_ind(treat_group, control_group)\n(t_stat, p_val)\n```\n> The t-test returns a **t-statistic of -1.194** and a **p-value of 0.232**, indicating no statistically significant difference in the `years` variable between the treatment and control groups. This suggests that both groups had similar donation histories prior to the experiment.\n\nWe also run a regression of `years ~ treatment` to confirm the result:\n```{python}\n#| echo: true\nreg_model = smf.ols('years ~ treatment', data=df_clean).fit()\nreg_model.params.to_frame(\"coef\").join(reg_model.pvalues.to_frame(\"p-value\"))\n```\n\n> The estimated coefficient on `treatment` is **-0.0631** with a **p-value of 0.232**, again showing no meaningful difference.\n\nThese results support the conclusion that the randomization procedure successfully balanced the groups in terms of how long individuals had been donating to the organization.\n\n```{python}\n#| echo: false\n# Summary statistics\ndf_clean.groupby('treatment')['years'].agg(['mean', 'std', 'count'])\n```\nThe table above shows the average number of years since the first donation (`years`) for each group:\n\n- Control group (treatment = 0): **6.14 years**\n- Treatment group (treatment = 1): **6.08 years**\n\nThe means are nearly identical, differing by only **0.0631 years** (approximately 23 days).  \nThis minimal difference provides strong visual evidence that the groups are balanced on this pre-treatment variable, reinforcing the validity of the random assignment.\n\n\n#### **Summary Interpretation:**\n\n- **T-test result**: t = -1.194, p = 0.232 â†’ No significant difference\n- **Regression**: treatment coefficient = -0.0631, also not significant\n- **Conclusion**: There is no statistical evidence of a difference in donor tenure between the treatment and control groups.\n\n\nThese results confirm that the groups are balanced in terms of donor tenure.  \nThe near-identical averages and the lack of statistically significant difference indicate that the treatment assignment did not disrupt the pre-existing characteristics of the sample.  \nThis supports the internal validity of the experimental design.\n\n#### **3. `freq` (Number of Prior Donations)**\nWe now test whether the treatment and control groups are balanced in terms of their prior donation frequency (`freq`). This variable captures how often individuals have previously given and reflects general giving propensity.\n\n```{python}\n#| echo: false\n\n# Extract data and run t-test\ntreat_group = df_clean[df_clean['treatment'] == 1]['freq']\ncontrol_group = df_clean[df_clean['treatment'] == 0]['freq']\nt_stat, p_val = stats.ttest_ind(treat_group, control_group)\n(t_stat, p_val)\n```\n> The t-test returns a **t-statistic of -0.060** and a **p-value of 0.952**, indicating no statistically significant difference in the `freq` variable between the treatment and control groups.\n\nWe also run a regression of `freq ~ treatment` to confirm the result:\n```{python}\n#| echo: true\nreg_model = smf.ols('freq ~ treatment', data=df_clean).fit()\nreg_model.params.to_frame(\"coef\").join(reg_model.pvalues.to_frame(\"p-value\"))\n```\n> The estimated coefficient on `treatment` is **-0.0066** with a **p-value of 0.952**, again showing no meaningful difference.\n```{python}\n#| echo: false\n\n# Summary statistics\ndf_clean.groupby('treatment')['freq'].agg(['mean', 'std', 'count'])\n```\nThe table above shows the average number of prior donations (`freq`) for each group:\n\n- Control group (treatment = 0): **8.07 donations**\n- Treatment group (treatment = 1): **8.06 donations**\n\nThe means are nearly identical, differing by only **0.0066 donations**.  \nThis minimal difference provides strong visual and statistical evidence that the groups are balanced on this pre-treatment variable.\n\n#### **Summary Interpretation:**\n\n- **T-test result**: t = -0.060, p = 0.952 â†’ No significant difference\n- **Regression**: treatment coefficient = -0.0066, p = 0.952 â†’ also not significant\n- **Conclusion**: There is no statistical evidence of a difference in prior donation frequency between the groups.\n\n\n## Experimental Results\n\n### Charitable Contribution Made\n\nFirst, I analyze whether matched donations lead to an increased response rate of making a donation. And begin by examining whether the treatment group (those who received a matching donation offer) had a higher probability of making a charitable contribution (`gave = 1`) than the control group.\n```{python}\n#| echo: false\n\n# Clean data\ndf_contribution = df[['treatment', 'gave']].dropna()\n\n# Compute group-wise donation rates\ndonation_rates = df_contribution.groupby('treatment')['gave'].mean().reset_index()\ndonation_rates['treatment'] = donation_rates['treatment'].map({0: 'Control', 1: 'Treatment'})\ndonation_rates\n```\n\n```{python}\n#| echo: false\n# Bar plot of donation rates\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(figsize=(6, 4))\nsns.barplot(x='treatment', y='gave', data=donation_rates)\nplt.title('Proportion of People Who Donated')\nplt.ylabel('Donation Rate')\nplt.xlabel('Group')\nplt.ylim(0, 0.03)\nplt.tight_layout()\nplt.show()\n```\n- The bar plot shows a higher donation rate in the treatment group compared to the control group.\n- This suggests a **potential positive effect of matching donations** on participation in giving.\n\nI also conduct a **t-test** to assess whether the difference in donation rates is statistically significant.\n\n```{python}\n#| echo: false\n# Run t-test\ncontrol_group = df_contribution[df_contribution['treatment'] == 0]['gave']\ntreatment_group = df_contribution[df_contribution['treatment'] == 1]['gave']\nt_stat, p_val = stats.ttest_ind(treatment_group, control_group)\nt_stat, p_val\n```\n> The t-test returns a **t-statistic of 3.10** and a **p-value of 0.0019**, indicating a statistically significant difference between the groups.  \n> This result suggests that the matching donation treatment had a positive effect on the likelihood of giving.\n\nTo further investigate the effect of the matching donation offer on donation behavior, we run a simple linear regression where the dependent variable is `gave` (1 if donated, 0 if not) and the independent variable is `treatment` (1 = received match offer, 0 = control).\n\n```{python}\n#| echo: true\n\nols_model = smf.ols('gave ~ treatment', data=df_contribution).fit()\nols_model.params.to_frame(\"coef\").join(ols_model.pvalues.to_frame(\"p-value\"))\n```\n\n> The OLS regression estimates that the coefficient on `treatment` is **0.0042**, with a **p-value of 0.002**.  \n> This means that being in the treatment group increased the probability of donation by about **0.42 percentage points**, and this effect is statistically significant.\n\nThis result is **consistent with the earlier t-test**, which also showed a significant difference between groups.\n\nTo more accurately model the binary outcome variable (`gave`), we also estimate a **Probit regression**. This approach accounts for the 0/1 nature of the dependent variable and models the **probability** that an individual donates.\n\n```{python}\n#| echo: true\nprobit_model = smf.probit('gave ~ treatment', data=df_contribution).fit()\nprobit_model.params.to_frame(\"coef\").join(probit_model.pvalues.to_frame(\"p-value\"))\n```\n\n> The estimated coefficient on `treatment` is **0.0868**, with a **p-value of 0.002**.  \n> This indicates that being assigned to the treatment group **significantly increases** the probability of donating.\n\nAlthough the Probit coefficient is not directly interpretable as a marginal effect (like in OLS), the **positive sign and low p-value** confirm that the treatment effect is **positive and statistically significant**.\n\n#### **Summary: Charitable Contribution Made**\n\nIn this section, I analyzed whether offering a matching donation increases the likelihood that individuals donate.\n\n- I first compared donation rates between the treatment and control groups using a bar plot. The visual comparison showed a modest increase in the treatment group.\n- A **t-test** confirmed that this difference is statistically significant (**t = 3.10, p = 0.0019**), suggesting that the treatment effect is not due to random chance.\n- I then estimated an **OLS regression** of `gave ~ treatment`, which indicated that being in the treatment group increased donation probability by approximately **0.42 percentage points**â€”a meaningful and significant effect.\n- Finally, I fit a **Probit regression** to better model the binary outcome variable. The coefficient on `treatment` was positive and statistically significant (**0.087, p = 0.002**), further confirming the effect.\n\nTogether, these results provide strong evidence that matching donation offers **increase the probability of giving**.  \n\n_NOTE: Linear regression results appear replicate Table 3 column 1 in the paper. Probit results do not, despite Table 3 indicating its results come from probit regressions..._\n\n\n### Differences between Match Rates\n\nNext, I assess the effectiveness of different sizes of matched donations on the response rate. To test whether higher match ratios (2:1 and 3:1) are more effective than the baseline 1:1 ratio at encouraging charitable contributions.\n\n```{python}\n#| echo: false\n\n# Step 1: Filter treatment group with valid match ratios\ndf['ratio'] = df['ratio'].astype(str)\ndf_match = df[(df['treatment'] == 1) & (df['ratio'].isin(['1', '2', '3']))].copy()\n\n# Step 2: Create dummy variables\ndf_match['ratio1'] = (df_match['ratio'] == '1').astype(int)\ndf_match['ratio2'] = (df_match['ratio'] == '2').astype(int)\ndf_match['ratio3'] = (df_match['ratio'] == '3').astype(int)\n\n# Step 3: Run t-tests\nrate_1 = df_match[df_match['ratio1'] == 1]['gave']\nrate_2 = df_match[df_match['ratio2'] == 1]['gave']\nrate_3 = df_match[df_match['ratio3'] == 1]['gave']\n\nt_12 = stats.ttest_ind(rate_2, rate_1)\nt_23 = stats.ttest_ind(rate_3, rate_2)\nt_12, t_23\n```\nThe two-sample t-tests show:\n\n- **2:1 vs 1:1**: t = 0.965, p = 0.335 â†’ not significant\n- **3:1 vs 2:1**: t = 0.050, p = 0.960 â†’ not significant\n\nThese results indicate that there is no statistically significant difference in donation rates between the 1:1 and 2:1 match groups, or between the 2:1 and 3:1 match groups.\n\n\n```{python}\n#| echo: false\n# Step 4: Donation rate by match ratio\ndf_match.groupby('ratio')['gave'].mean()\n```\nThe table below shows the average donation rate (`gave`) by match ratio:\n\n- **1:1** â†’ 2.07%\n- **2:1** â†’ 2.26%\n- **3:1** â†’ 2.27%\n\nWhile donation rates increase slightly as the match ratio rises, the differences are minimal and may not be practically or statistically meaningful.\n\n```{python}\n#| echo: true\nreg_model_categorical = smf.ols('gave ~ C(ratio)', data=df_match).fit()\nreg_model_categorical.params.to_frame(\"coef\").join(reg_model_categorical.pvalues.to_frame(\"p-value\"))\n```\n\n> We regress `gave` on the categorical variable `ratio`, treating 1:1 as the baseline:\n\n> - The intercept (0.0207) represents the donation rate for the 1:1 match group (2.07%)\n- The coefficient on **2:1** is 0.0019 (p = 0.338), indicating a small and **not statistically significant** increase over the 1:1 group\n- The coefficient on **3:1** is effectively 0 (p = 0.313), indicating **no difference** compared to the 2:1 group\n\nOverall, the regression confirms the t-test findings: **higher match ratios do not significantly increase the probability of donation**.\n\n\n### Size of Charitable Contribution\n\nIn this subsection, I analyze the effect of the size of matched donation on the size of the charitable contribution.\n\n### Size of Charitable Contribution\n\nIn this section, we examine whether the matching donation treatment affects **not only the likelihood of donating**, but also the **amount donated**.\n\n---\n\n#### 1. Analysis on All Observations\n\nI begin by analyzing the donation amount for the entire sample, including individuals who did not donate (whose `amount = 0`).\n\n```{python}\n#| echo: false\n\ndf_amount = df[['treatment', 'amount', 'gave']].dropna()\n\n# T-test\nt_stat_all, p_val_all = stats.ttest_ind(\n    df_amount[df_amount['treatment'] == 1]['amount'],\n    df_amount[df_amount['treatment'] == 0]['amount']\n)\nt_stat_all, p_val_all\n```\n> The t-test yields **t = 1.86** and **p = 0.063**, suggesting a marginally non-significant difference.\n\n```{python}\n#| echo: true\nreg_all = smf.ols('amount ~ treatment', data=df_amount).fit()\nreg_all.params.to_frame(\"coef\").join(reg_all.pvalues.to_frame(\"p-value\"))\n```\n\n> The regression estimates a treatment effect of **$0.15**, with a **p-value of 0.063**.  \n> This suggests that receiving a matching offer slightly increases the average donation, but the effect is not statistically significant at the 5% level.\n\n---\n\n#### 2. Analysis Conditional on Giving\n\nNext, I restrict the sample to **only those who donated** (`gave == 1`) and repeat the analysis.\n\n```{python}\n#| echo: false\n\ndf_positive = df_amount[df_amount['gave'] == 1]\n\n# T-test\nt_stat_pos, p_val_pos = stats.ttest_ind(\n    df_positive[df_positive['treatment'] == 1]['amount'],\n    df_positive[df_positive['treatment'] == 0]['amount']\n)\nt_stat_pos, p_val_pos\n```\n> Among donors only, the t-test show a **t-statistic of -0.581** and a **p-value of 0.561**, indicating no statistically significant difference in the donation amounts between the treatment and control groups.  \n\n```{python}\n#| echo: true\nreg_pos = smf.ols('amount ~ treatment', data=df_positive).fit()\nreg_pos.params.to_frame(\"coef\").join(reg_pos.pvalues.to_frame(\"p-value\"))\n```\n\n> The regression shows that treatment group donors gave **$1.67 less** on average than control group donors, but this difference is **not statistically significant**.\n\n---\n\n#### 3. Visualization: Donation Amount Distribution\n\nI now visualize the donation amounts among those who gave, using histograms for the control and treatment groups.\n\n```{python}\n#| echo: false\n\nplt.figure(figsize=(12, 5))\n\n# Control group\nplt.subplot(1, 2, 1)\ncontrol_amounts = df_positive[df_positive['treatment'] == 0]['amount']\nsns.histplot(control_amounts, bins=30, kde=False)\nplt.axvline(control_amounts.mean(), color='red', linestyle='--', label=f\"Mean: ${control_amounts.mean():.2f}\")\nplt.title('Control Group Donations')\nplt.xlabel('Donation Amount')\nplt.ylabel('Frequency')\nplt.legend()\n\n# Treatment group\nplt.subplot(1, 2, 2)\ntreatment_amounts = df_positive[df_positive['treatment'] == 1]['amount']\nsns.histplot(treatment_amounts, bins=30, kde=False)\nplt.axvline(treatment_amounts.mean(), color='red', linestyle='--', label=f\"Mean: ${treatment_amounts.mean():.2f}\")\nplt.title('Treatment Group Donations')\nplt.xlabel('Donation Amount')\nplt.ylabel('Frequency')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n```\n> The control group's average donation is around **$45.54**, while the treatment group's average is **$43.87**.\n> Visually, the difference is minimal and statistically insignificant.\n\n---\n\n**Conclusion**:  \nThere is **no strong evidence** that receiving a matching donation offer affects the **amount given**.  \nWhile the treatment may slightly increase overall donation amounts in the full sample, it does **not lead to significantly larger gifts among those who do donate**.\n\n\n\n## Simulation Experiment\n\nAs a reminder of how the t-statistic \"works,\" in this section I use simulation to demonstrate the Law of Large Numbers and the Central Limit Theorem.\n\nSuppose the true distribution of respondents who do not get a charitable donation match is Bernoulli with probability p=0.018 that a donation is made. \n\nFurther suppose that the true distribution of respondents who do get a charitable donation match of any size is Bernoulli with probability p=0.022 that a donation is made.\n\n### Law of Large Numbers\n\nThis simulation illustrates the concept of **sampling error**â€”the difference between the sample average and the true population average due to random variation in finite samples.\n\nBy simulating 10,000 donation outcomes from both the control (p = 0.018) and treatment (p = 0.022) groups, we compute the difference between each pair of observations.\n\nI plot the **cumulative average** of these differences as the number of samples increases.\n\n```{python}\n#| echo: true\nimport numpy as np\n\n# Simulation parameters\np_control = 0.018\np_treatment = 0.022\nn_sim = 10000\n\n# Law of Large Numbers\ncontrol_draws = np.random.binomial(1, p_control, n_sim)\ntreatment_draws = np.random.binomial(1, p_treatment, n_sim)\ndiffs = treatment_draws - control_draws\ncumulative_avg = np.cumsum(diffs) / np.arange(1, n_sim + 1)\n\n# Plot cumulative average\nplt.figure(figsize=(10, 5))\nplt.plot(cumulative_avg, label='Cumulative Average')\nplt.axhline(y=p_treatment - p_control, color='red', linestyle='--', label='True Treatment Effect (0.004)')\nplt.title('Law of Large Numbers: Cumulative Average of Differences')\nplt.xlabel('Number of Simulations')\nplt.ylabel('Cumulative Average Difference')\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n```\n\n> The plot shows that the cumulative average difference between treatment and control groups initially fluctuates but gradually stabilizes around **0.004**, the true treatment effect.  \n> This demonstrates the **Law of Large Numbers**: as sample size increases, the sample average converges to the population average.\n\n\n### Central Limit Theorem (CLT)\n\nTo illustrate the **Central Limit Theorem**, I simulate 1,000 average donation differences between treatment and control groups at different sample sizes: 50, 200, 500, and 1000. The goal is to demonstrate how the sampling distribution of the mean becomes more normal and more concentrated as sample size increases.\n\n\nIn this simulation, I repeat the following process 1,000 times for each sample size:\n\n1. Draw `n` binary donation outcomes from the control group (p = 0.018)\n2. Draw `n` binary donation outcomes from the treatment group (p = 0.022)\n3. Compute the mean difference between the two samples\n4. Store and plot the distribution of these mean differences\n\n\n```{python}\n#| echo: true\nsample_sizes = [50, 200, 500, 1000]\nfig, axes = plt.subplots(2, 2, figsize=(12, 10))\naxes = axes.flatten()\n\nfor i, size in enumerate(sample_sizes):\n    mean_diffs = []\n    for _ in range(1000):\n        control_sample = np.random.binomial(1, p_control, size)\n        treatment_sample = np.random.binomial(1, p_treatment, size)\n        diff = np.mean(treatment_sample) - np.mean(control_sample)\n        mean_diffs.append(diff)\n    axes[i].hist(mean_diffs, edgecolor='black')\n    axes[i].axvline(x=p_treatment - p_control, color='red', linestyle='--', label='True Effect (0.004)')\n    axes[i].set_title(f'Sample Size = {size}')\n    axes[i].set_xlabel('Mean Difference')\n    axes[i].set_ylabel('Frequency')\n    axes[i].legend()\n    axes[i].grid(True)\n\nplt.suptitle('Central Limit Theorem: Sampling Distributions of Mean Differences')\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n```\n\n---\nAs the sample size increases, the distribution of mean differences becomes:\n- **More symmetric**\n- **More tightly centered**\n- **Closer to a bell-shaped (normal) distribution**\n\nThis is a visual demonstration of the **Central Limit Theorem**:  \nRegardless of the underlying distribution, the **sampling distribution of the sample mean approaches normality** as sample size increases.\n\nBy the time `n = 1000`, the distribution is sharply centered around the **true treatment effect (0.004)**, confirming that **larger samples reduce variability** and improve the precision of statistical inference.\n\nAlso, when sample size \\( n > 30 \\), the sampling distribution of the mean is typically close enough to normal for t-tests and confidence intervals to be reliable.\n\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n\n## Introduction\n\nDean Karlan at Yale and John List at the University of Chicago conducted a field experiment to test the effectiveness of different fundraising letters. They sent out 50,000 fundraising letters to potential donors, randomly assigning each letter to one of three treatments: a standard letter, a matching grant letter, or a challenge grant letter. \n\nEach recipient was randomly assigned to receive one of the following treatments:\n\n- A **standard solicitation letter** (control group)\n- A letter including a **matching donation offer** (treatment group)\n- Variations within the matching group that differed by:\n  - **Match ratio** (1:1, 2:1, or 3:1)\n  - **Maximum match amount** ($25k, $50k, $100k, or unstated)\n  - **Suggested donation level** (e.g., base amount, 1.25x, or 1.5x of prior donation)\n\nThe matching grant was framed as coming from a \"concerned fellow member\" who would match donations received up to a certain amount, providing a perceived **multiplier effect** to the recipient's contribution.\n\nThis design allowed the authors to explore not only the **overall impact of offering a match** on donation rates and amounts, but also to test whether the **size of the match ratio** or the **suggested donation amount** affected donor behavior.\n\nThey published the results of this experiment in the _American Economic Review_ in 2007. The article and supporting data are available from the [AEA website](https://www.aeaweb.org/articles?id=10.1257/aer.97.5.1774) and from Innovations for Poverty Action as part of [Harvard's Dataverse](https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/27853&version=4.2).\n\n\nThis project seeks to replicate their results.\n\n\n## Data\n\n### Description\n\n:::: {.callout-note collapse=\"true\"}\n### Variable Definitions\n\n| Variable             | Description                                                         |\n|----------------------|---------------------------------------------------------------------|\n| `treatment`          | Treatment                                                           |\n| `control`            | Control                                                             |\n| `ratio`              | Match ratio                                                         |\n| `ratio2`             | 2:1 match ratio                                                     |\n| `ratio3`             | 3:1 match ratio                                                     |\n| `size`               | Match threshold                                                     |\n| `size25`             | \\$25,000 match threshold                                            |\n| `size50`             | \\$50,000 match threshold                                            |\n| `size100`            | \\$100,000 match threshold                                           |\n| `sizeno`             | Unstated match threshold                                            |\n| `ask`                | Suggested donation amount                                           |\n| `askd1`              | Suggested donation was highest previous contribution                |\n| `askd2`              | Suggested donation was 1.25 x highest previous contribution         |\n| `askd3`              | Suggested donation was 1.50 x highest previous contribution         |\n| `ask1`               | Highest previous contribution (for suggestion)                      |\n| `ask2`               | 1.25 x highest previous contribution (for suggestion)               |\n| `ask3`               | 1.50 x highest previous contribution (for suggestion)               |\n| `amount`             | Dollars given                                                       |\n| `gave`               | Gave anything                                                       |\n| `amountchange`       | Change in amount given                                              |\n| `hpa`                | Highest previous contribution                                       |\n| `ltmedmra`           | Small prior donor: last gift was less than median \\$35              |\n| `freq`               | Number of prior donations                                           |\n| `years`              | Number of years since initial donation                              |\n| `year5`              | At least 5 years since initial donation                             |\n| `mrm2`               | Number of months since last donation                                |\n| `dormant`            | Already donated in 2005                                             |\n| `female`             | Female                                                              |\n| `couple`             | Couple                                                              |\n| `state50one`         | State tag: 1 for one observation of each of 50 states; 0 otherwise  |\n| `nonlit`             | Nonlitigation                                                       |\n| `cases`              | Court cases from state in 2004-5 in which organization was involved |\n| `statecnt`           | Percent of sample from state                                        |\n| `stateresponse`      | Proportion of sample from the state who gave                        |\n| `stateresponset`     | Proportion of treated sample from the state who gave                |\n| `stateresponsec`     | Proportion of control sample from the state who gave                |\n| `stateresponsetminc` | stateresponset - stateresponsec                                     |\n| `perbush`            | State vote share for Bush                                           |\n| `close25`            | State vote share for Bush between 47.5% and 52.5%                   |\n| `red0`               | Red state                                                           |\n| `blue0`              | Blue state                                                          |\n| `redcty`             | Red county                                                          |\n| `bluecty`            | Blue county                                                         |\n| `pwhite`             | Proportion white within zip code                                    |\n| `pblack`             | Proportion black within zip code                                    |\n| `page18_39`          | Proportion age 18-39 within zip code                                |\n| `ave_hh_sz`          | Average household size within zip code                              |\n| `median_hhincome`    | Median household income within zip code                             |\n| `powner`             | Proportion house owner within zip code                              |\n| `psch_atlstba`       | Proportion who finished college within zip code                     |\n| `pop_propurban`      | Proportion of population urban within zip code                      |\n\n::::\n\n```{python}\n#| echo: false\n#| message: false\n#| warning: false\n\nimport pandas as pd\n\n# Load dataset\ndf = pd.read_stata(\"karlan_list_2007.dta\")\n\n# Optionally preview first few rows (or not show anything)\ndf.head()\n```\n\n\n\n### Balance Test \n\nAs an ad hoc test of the randomization mechanism, I provide a series of tests that compare aspects of the treatment and control groups to assess whether they are statistically significantly different from one another.\n\n\n#### **1. `mrm2` (Months Since Last Donation)**\n\nWe first test whether the treatment and control groups differ significantly in the number of months since their last donation (`mrm2`). This helps verify whether the randomization process created balanced groups.\n\n```{python}\n#| echo: false\nfrom scipy import stats\nimport statsmodels.api as sm\nimport statsmodels.formula.api as smf\ndf_clean = df[['treatment', 'mrm2', 'years', 'freq', 'female']].dropna()\n\ntreat_group = df_clean[df_clean['treatment'] == 1]['mrm2']\ncontrol_group = df_clean[df_clean['treatment'] == 0]['mrm2']\nt_stat, p_val = stats.ttest_ind(treat_group, control_group)\nt_stat, p_val\n```\n> The t-test returns a **t-statistic of 0.076** and a **p-value of 0.939**, indicating no statistically significant difference in the `mrm2` variable between the two groups.\n\nWe also run a regression of `mrm2 ~ treatment` to confirm the result:\n\n```{python}\n#| echo: true\nreg_model = smf.ols('mrm2 ~ treatment', data=df_clean).fit()\nreg_model.params.to_frame(\"coef\").join(reg_model.pvalues.to_frame(\"p-value\"))\n\n```\n> The estimated coefficient on `treatment` is **0.0088** with a **p-value of 0.939**, again showing no meaningful difference.\n\n\n\n\n#### Summary statistics:\n\n```{python}\n#| echo: false\ndf_clean.groupby('treatment')['mrm2'].agg(['mean', 'std', 'count'])\n```\nThe table above shows the average number of months since the last donation (`mrm2`) for each group:\n\n- Control group (treatment = 0): **12.98 months**\n- Treatment group (treatment = 1): **12.99 months**\n\nThe means are nearly identical, differing by only **0.0088 months**.  \nThis minimal difference provides strong visual evidence that the groups are balanced on this pre-treatment variable.\n\n#### **Summary Interpretation:**\n\n- **T-test result**: t = 0.076, p = 0.939 â†’ No significant difference\n- **Regression**: treatment coefficient is 0.0088, also not significant\n- **Conclusion**: There is no statistical evidence of a difference in the time since last donation between the treatment and control groups.\n\n\n#### **2. `years` (Years Since First Donation)**\n\nWe now test whether the treatment and control groups differ significantly in the number of years since the individual first donated (`years`). This variable serves as a proxy for donor loyalty and tenure.\n\n```{python}\n#| echo: false\n#| output: true\n\n# T-test for years\ntreat_group = df_clean[df_clean['treatment'] == 1]['years']\ncontrol_group = df_clean[df_clean['treatment'] == 0]['years']\nt_stat, p_val = stats.ttest_ind(treat_group, control_group)\n(t_stat, p_val)\n```\n> The t-test returns a **t-statistic of -1.194** and a **p-value of 0.232**, indicating no statistically significant difference in the `years` variable between the treatment and control groups. This suggests that both groups had similar donation histories prior to the experiment.\n\nWe also run a regression of `years ~ treatment` to confirm the result:\n```{python}\n#| echo: true\nreg_model = smf.ols('years ~ treatment', data=df_clean).fit()\nreg_model.params.to_frame(\"coef\").join(reg_model.pvalues.to_frame(\"p-value\"))\n```\n\n> The estimated coefficient on `treatment` is **-0.0631** with a **p-value of 0.232**, again showing no meaningful difference.\n\nThese results support the conclusion that the randomization procedure successfully balanced the groups in terms of how long individuals had been donating to the organization.\n\n```{python}\n#| echo: false\n# Summary statistics\ndf_clean.groupby('treatment')['years'].agg(['mean', 'std', 'count'])\n```\nThe table above shows the average number of years since the first donation (`years`) for each group:\n\n- Control group (treatment = 0): **6.14 years**\n- Treatment group (treatment = 1): **6.08 years**\n\nThe means are nearly identical, differing by only **0.0631 years** (approximately 23 days).  \nThis minimal difference provides strong visual evidence that the groups are balanced on this pre-treatment variable, reinforcing the validity of the random assignment.\n\n\n#### **Summary Interpretation:**\n\n- **T-test result**: t = -1.194, p = 0.232 â†’ No significant difference\n- **Regression**: treatment coefficient = -0.0631, also not significant\n- **Conclusion**: There is no statistical evidence of a difference in donor tenure between the treatment and control groups.\n\n\nThese results confirm that the groups are balanced in terms of donor tenure.  \nThe near-identical averages and the lack of statistically significant difference indicate that the treatment assignment did not disrupt the pre-existing characteristics of the sample.  \nThis supports the internal validity of the experimental design.\n\n#### **3. `freq` (Number of Prior Donations)**\nWe now test whether the treatment and control groups are balanced in terms of their prior donation frequency (`freq`). This variable captures how often individuals have previously given and reflects general giving propensity.\n\n```{python}\n#| echo: false\n\n# Extract data and run t-test\ntreat_group = df_clean[df_clean['treatment'] == 1]['freq']\ncontrol_group = df_clean[df_clean['treatment'] == 0]['freq']\nt_stat, p_val = stats.ttest_ind(treat_group, control_group)\n(t_stat, p_val)\n```\n> The t-test returns a **t-statistic of -0.060** and a **p-value of 0.952**, indicating no statistically significant difference in the `freq` variable between the treatment and control groups.\n\nWe also run a regression of `freq ~ treatment` to confirm the result:\n```{python}\n#| echo: true\nreg_model = smf.ols('freq ~ treatment', data=df_clean).fit()\nreg_model.params.to_frame(\"coef\").join(reg_model.pvalues.to_frame(\"p-value\"))\n```\n> The estimated coefficient on `treatment` is **-0.0066** with a **p-value of 0.952**, again showing no meaningful difference.\n```{python}\n#| echo: false\n\n# Summary statistics\ndf_clean.groupby('treatment')['freq'].agg(['mean', 'std', 'count'])\n```\nThe table above shows the average number of prior donations (`freq`) for each group:\n\n- Control group (treatment = 0): **8.07 donations**\n- Treatment group (treatment = 1): **8.06 donations**\n\nThe means are nearly identical, differing by only **0.0066 donations**.  \nThis minimal difference provides strong visual and statistical evidence that the groups are balanced on this pre-treatment variable.\n\n#### **Summary Interpretation:**\n\n- **T-test result**: t = -0.060, p = 0.952 â†’ No significant difference\n- **Regression**: treatment coefficient = -0.0066, p = 0.952 â†’ also not significant\n- **Conclusion**: There is no statistical evidence of a difference in prior donation frequency between the groups.\n\n\n## Experimental Results\n\n### Charitable Contribution Made\n\nFirst, I analyze whether matched donations lead to an increased response rate of making a donation. And begin by examining whether the treatment group (those who received a matching donation offer) had a higher probability of making a charitable contribution (`gave = 1`) than the control group.\n```{python}\n#| echo: false\n\n# Clean data\ndf_contribution = df[['treatment', 'gave']].dropna()\n\n# Compute group-wise donation rates\ndonation_rates = df_contribution.groupby('treatment')['gave'].mean().reset_index()\ndonation_rates['treatment'] = donation_rates['treatment'].map({0: 'Control', 1: 'Treatment'})\ndonation_rates\n```\n\n```{python}\n#| echo: false\n# Bar plot of donation rates\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(figsize=(6, 4))\nsns.barplot(x='treatment', y='gave', data=donation_rates)\nplt.title('Proportion of People Who Donated')\nplt.ylabel('Donation Rate')\nplt.xlabel('Group')\nplt.ylim(0, 0.03)\nplt.tight_layout()\nplt.show()\n```\n- The bar plot shows a higher donation rate in the treatment group compared to the control group.\n- This suggests a **potential positive effect of matching donations** on participation in giving.\n\nI also conduct a **t-test** to assess whether the difference in donation rates is statistically significant.\n\n```{python}\n#| echo: false\n# Run t-test\ncontrol_group = df_contribution[df_contribution['treatment'] == 0]['gave']\ntreatment_group = df_contribution[df_contribution['treatment'] == 1]['gave']\nt_stat, p_val = stats.ttest_ind(treatment_group, control_group)\nt_stat, p_val\n```\n> The t-test returns a **t-statistic of 3.10** and a **p-value of 0.0019**, indicating a statistically significant difference between the groups.  \n> This result suggests that the matching donation treatment had a positive effect on the likelihood of giving.\n\nTo further investigate the effect of the matching donation offer on donation behavior, we run a simple linear regression where the dependent variable is `gave` (1 if donated, 0 if not) and the independent variable is `treatment` (1 = received match offer, 0 = control).\n\n```{python}\n#| echo: true\n\nols_model = smf.ols('gave ~ treatment', data=df_contribution).fit()\nols_model.params.to_frame(\"coef\").join(ols_model.pvalues.to_frame(\"p-value\"))\n```\n\n> The OLS regression estimates that the coefficient on `treatment` is **0.0042**, with a **p-value of 0.002**.  \n> This means that being in the treatment group increased the probability of donation by about **0.42 percentage points**, and this effect is statistically significant.\n\nThis result is **consistent with the earlier t-test**, which also showed a significant difference between groups.\n\nTo more accurately model the binary outcome variable (`gave`), we also estimate a **Probit regression**. This approach accounts for the 0/1 nature of the dependent variable and models the **probability** that an individual donates.\n\n```{python}\n#| echo: true\nprobit_model = smf.probit('gave ~ treatment', data=df_contribution).fit()\nprobit_model.params.to_frame(\"coef\").join(probit_model.pvalues.to_frame(\"p-value\"))\n```\n\n> The estimated coefficient on `treatment` is **0.0868**, with a **p-value of 0.002**.  \n> This indicates that being assigned to the treatment group **significantly increases** the probability of donating.\n\nAlthough the Probit coefficient is not directly interpretable as a marginal effect (like in OLS), the **positive sign and low p-value** confirm that the treatment effect is **positive and statistically significant**.\n\n#### **Summary: Charitable Contribution Made**\n\nIn this section, I analyzed whether offering a matching donation increases the likelihood that individuals donate.\n\n- I first compared donation rates between the treatment and control groups using a bar plot. The visual comparison showed a modest increase in the treatment group.\n- A **t-test** confirmed that this difference is statistically significant (**t = 3.10, p = 0.0019**), suggesting that the treatment effect is not due to random chance.\n- I then estimated an **OLS regression** of `gave ~ treatment`, which indicated that being in the treatment group increased donation probability by approximately **0.42 percentage points**â€”a meaningful and significant effect.\n- Finally, I fit a **Probit regression** to better model the binary outcome variable. The coefficient on `treatment` was positive and statistically significant (**0.087, p = 0.002**), further confirming the effect.\n\nTogether, these results provide strong evidence that matching donation offers **increase the probability of giving**.  \n\n_NOTE: Linear regression results appear replicate Table 3 column 1 in the paper. Probit results do not, despite Table 3 indicating its results come from probit regressions..._\n\n\n### Differences between Match Rates\n\nNext, I assess the effectiveness of different sizes of matched donations on the response rate. To test whether higher match ratios (2:1 and 3:1) are more effective than the baseline 1:1 ratio at encouraging charitable contributions.\n\n```{python}\n#| echo: false\n\n# Step 1: Filter treatment group with valid match ratios\ndf['ratio'] = df['ratio'].astype(str)\ndf_match = df[(df['treatment'] == 1) & (df['ratio'].isin(['1', '2', '3']))].copy()\n\n# Step 2: Create dummy variables\ndf_match['ratio1'] = (df_match['ratio'] == '1').astype(int)\ndf_match['ratio2'] = (df_match['ratio'] == '2').astype(int)\ndf_match['ratio3'] = (df_match['ratio'] == '3').astype(int)\n\n# Step 3: Run t-tests\nrate_1 = df_match[df_match['ratio1'] == 1]['gave']\nrate_2 = df_match[df_match['ratio2'] == 1]['gave']\nrate_3 = df_match[df_match['ratio3'] == 1]['gave']\n\nt_12 = stats.ttest_ind(rate_2, rate_1)\nt_23 = stats.ttest_ind(rate_3, rate_2)\nt_12, t_23\n```\nThe two-sample t-tests show:\n\n- **2:1 vs 1:1**: t = 0.965, p = 0.335 â†’ not significant\n- **3:1 vs 2:1**: t = 0.050, p = 0.960 â†’ not significant\n\nThese results indicate that there is no statistically significant difference in donation rates between the 1:1 and 2:1 match groups, or between the 2:1 and 3:1 match groups.\n\n\n```{python}\n#| echo: false\n# Step 4: Donation rate by match ratio\ndf_match.groupby('ratio')['gave'].mean()\n```\nThe table below shows the average donation rate (`gave`) by match ratio:\n\n- **1:1** â†’ 2.07%\n- **2:1** â†’ 2.26%\n- **3:1** â†’ 2.27%\n\nWhile donation rates increase slightly as the match ratio rises, the differences are minimal and may not be practically or statistically meaningful.\n\n```{python}\n#| echo: true\nreg_model_categorical = smf.ols('gave ~ C(ratio)', data=df_match).fit()\nreg_model_categorical.params.to_frame(\"coef\").join(reg_model_categorical.pvalues.to_frame(\"p-value\"))\n```\n\n> We regress `gave` on the categorical variable `ratio`, treating 1:1 as the baseline:\n\n> - The intercept (0.0207) represents the donation rate for the 1:1 match group (2.07%)\n- The coefficient on **2:1** is 0.0019 (p = 0.338), indicating a small and **not statistically significant** increase over the 1:1 group\n- The coefficient on **3:1** is effectively 0 (p = 0.313), indicating **no difference** compared to the 2:1 group\n\nOverall, the regression confirms the t-test findings: **higher match ratios do not significantly increase the probability of donation**.\n\n\n### Size of Charitable Contribution\n\nIn this subsection, I analyze the effect of the size of matched donation on the size of the charitable contribution.\n\n### Size of Charitable Contribution\n\nIn this section, we examine whether the matching donation treatment affects **not only the likelihood of donating**, but also the **amount donated**.\n\n---\n\n#### 1. Analysis on All Observations\n\nI begin by analyzing the donation amount for the entire sample, including individuals who did not donate (whose `amount = 0`).\n\n```{python}\n#| echo: false\n\ndf_amount = df[['treatment', 'amount', 'gave']].dropna()\n\n# T-test\nt_stat_all, p_val_all = stats.ttest_ind(\n    df_amount[df_amount['treatment'] == 1]['amount'],\n    df_amount[df_amount['treatment'] == 0]['amount']\n)\nt_stat_all, p_val_all\n```\n> The t-test yields **t = 1.86** and **p = 0.063**, suggesting a marginally non-significant difference.\n\n```{python}\n#| echo: true\nreg_all = smf.ols('amount ~ treatment', data=df_amount).fit()\nreg_all.params.to_frame(\"coef\").join(reg_all.pvalues.to_frame(\"p-value\"))\n```\n\n> The regression estimates a treatment effect of **$0.15**, with a **p-value of 0.063**.  \n> This suggests that receiving a matching offer slightly increases the average donation, but the effect is not statistically significant at the 5% level.\n\n---\n\n#### 2. Analysis Conditional on Giving\n\nNext, I restrict the sample to **only those who donated** (`gave == 1`) and repeat the analysis.\n\n```{python}\n#| echo: false\n\ndf_positive = df_amount[df_amount['gave'] == 1]\n\n# T-test\nt_stat_pos, p_val_pos = stats.ttest_ind(\n    df_positive[df_positive['treatment'] == 1]['amount'],\n    df_positive[df_positive['treatment'] == 0]['amount']\n)\nt_stat_pos, p_val_pos\n```\n> Among donors only, the t-test show a **t-statistic of -0.581** and a **p-value of 0.561**, indicating no statistically significant difference in the donation amounts between the treatment and control groups.  \n\n```{python}\n#| echo: true\nreg_pos = smf.ols('amount ~ treatment', data=df_positive).fit()\nreg_pos.params.to_frame(\"coef\").join(reg_pos.pvalues.to_frame(\"p-value\"))\n```\n\n> The regression shows that treatment group donors gave **$1.67 less** on average than control group donors, but this difference is **not statistically significant**.\n\n---\n\n#### 3. Visualization: Donation Amount Distribution\n\nI now visualize the donation amounts among those who gave, using histograms for the control and treatment groups.\n\n```{python}\n#| echo: false\n\nplt.figure(figsize=(12, 5))\n\n# Control group\nplt.subplot(1, 2, 1)\ncontrol_amounts = df_positive[df_positive['treatment'] == 0]['amount']\nsns.histplot(control_amounts, bins=30, kde=False)\nplt.axvline(control_amounts.mean(), color='red', linestyle='--', label=f\"Mean: ${control_amounts.mean():.2f}\")\nplt.title('Control Group Donations')\nplt.xlabel('Donation Amount')\nplt.ylabel('Frequency')\nplt.legend()\n\n# Treatment group\nplt.subplot(1, 2, 2)\ntreatment_amounts = df_positive[df_positive['treatment'] == 1]['amount']\nsns.histplot(treatment_amounts, bins=30, kde=False)\nplt.axvline(treatment_amounts.mean(), color='red', linestyle='--', label=f\"Mean: ${treatment_amounts.mean():.2f}\")\nplt.title('Treatment Group Donations')\nplt.xlabel('Donation Amount')\nplt.ylabel('Frequency')\nplt.legend()\n\nplt.tight_layout()\nplt.show()\n```\n> The control group's average donation is around **$45.54**, while the treatment group's average is **$43.87**.\n> Visually, the difference is minimal and statistically insignificant.\n\n---\n\n**Conclusion**:  \nThere is **no strong evidence** that receiving a matching donation offer affects the **amount given**.  \nWhile the treatment may slightly increase overall donation amounts in the full sample, it does **not lead to significantly larger gifts among those who do donate**.\n\n\n\n## Simulation Experiment\n\nAs a reminder of how the t-statistic \"works,\" in this section I use simulation to demonstrate the Law of Large Numbers and the Central Limit Theorem.\n\nSuppose the true distribution of respondents who do not get a charitable donation match is Bernoulli with probability p=0.018 that a donation is made. \n\nFurther suppose that the true distribution of respondents who do get a charitable donation match of any size is Bernoulli with probability p=0.022 that a donation is made.\n\n### Law of Large Numbers\n\nThis simulation illustrates the concept of **sampling error**â€”the difference between the sample average and the true population average due to random variation in finite samples.\n\nBy simulating 10,000 donation outcomes from both the control (p = 0.018) and treatment (p = 0.022) groups, we compute the difference between each pair of observations.\n\nI plot the **cumulative average** of these differences as the number of samples increases.\n\n```{python}\n#| echo: true\nimport numpy as np\n\n# Simulation parameters\np_control = 0.018\np_treatment = 0.022\nn_sim = 10000\n\n# Law of Large Numbers\ncontrol_draws = np.random.binomial(1, p_control, n_sim)\ntreatment_draws = np.random.binomial(1, p_treatment, n_sim)\ndiffs = treatment_draws - control_draws\ncumulative_avg = np.cumsum(diffs) / np.arange(1, n_sim + 1)\n\n# Plot cumulative average\nplt.figure(figsize=(10, 5))\nplt.plot(cumulative_avg, label='Cumulative Average')\nplt.axhline(y=p_treatment - p_control, color='red', linestyle='--', label='True Treatment Effect (0.004)')\nplt.title('Law of Large Numbers: Cumulative Average of Differences')\nplt.xlabel('Number of Simulations')\nplt.ylabel('Cumulative Average Difference')\nplt.legend()\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n```\n\n> The plot shows that the cumulative average difference between treatment and control groups initially fluctuates but gradually stabilizes around **0.004**, the true treatment effect.  \n> This demonstrates the **Law of Large Numbers**: as sample size increases, the sample average converges to the population average.\n\n\n### Central Limit Theorem (CLT)\n\nTo illustrate the **Central Limit Theorem**, I simulate 1,000 average donation differences between treatment and control groups at different sample sizes: 50, 200, 500, and 1000. The goal is to demonstrate how the sampling distribution of the mean becomes more normal and more concentrated as sample size increases.\n\n\nIn this simulation, I repeat the following process 1,000 times for each sample size:\n\n1. Draw `n` binary donation outcomes from the control group (p = 0.018)\n2. Draw `n` binary donation outcomes from the treatment group (p = 0.022)\n3. Compute the mean difference between the two samples\n4. Store and plot the distribution of these mean differences\n\n\n```{python}\n#| echo: true\nsample_sizes = [50, 200, 500, 1000]\nfig, axes = plt.subplots(2, 2, figsize=(12, 10))\naxes = axes.flatten()\n\nfor i, size in enumerate(sample_sizes):\n    mean_diffs = []\n    for _ in range(1000):\n        control_sample = np.random.binomial(1, p_control, size)\n        treatment_sample = np.random.binomial(1, p_treatment, size)\n        diff = np.mean(treatment_sample) - np.mean(control_sample)\n        mean_diffs.append(diff)\n    axes[i].hist(mean_diffs, edgecolor='black')\n    axes[i].axvline(x=p_treatment - p_control, color='red', linestyle='--', label='True Effect (0.004)')\n    axes[i].set_title(f'Sample Size = {size}')\n    axes[i].set_xlabel('Mean Difference')\n    axes[i].set_ylabel('Frequency')\n    axes[i].legend()\n    axes[i].grid(True)\n\nplt.suptitle('Central Limit Theorem: Sampling Distributions of Mean Differences')\nplt.tight_layout(rect=[0, 0.03, 1, 0.95])\nplt.show()\n```\n\n---\nAs the sample size increases, the distribution of mean differences becomes:\n- **More symmetric**\n- **More tightly centered**\n- **Closer to a bell-shaped (normal) distribution**\n\nThis is a visual demonstration of the **Central Limit Theorem**:  \nRegardless of the underlying distribution, the **sampling distribution of the sample mean approaches normality** as sample size increases.\n\nBy the time `n = 1000`, the distribution is sharply centered around the **true treatment effect (0.004)**, confirming that **larger samples reduce variability** and improve the precision of statistical inference.\n\nAlso, when sample size \\( n > 30 \\), the sampling distribution of the mean is typically close enough to normal for t-tests and confidence intervals to be reliable.\n\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.22","theme":["cosmo","brand"],"title":"A Replication of Karlan and List (2007)","author":"Ruoqi Li","date":"today","callout-appearance":"minimal"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}